#
# FILENAME:     preseed-jessie.cfg
# AUTHOR:       Bennett Samowich <bsamowich@foolean.org>
# DATE:         2015-05-16
#
# DESCRIPTION:
#   Preseed configuration file for Debian (jessie)
#
#   This preseed file will install a base Debian system using a partitioning
#   layout based on the number and size of the disks.
#
#   PXE Init Arguments
#   ==================
#   initdaemon  - The init daemon (systemd vs sysvinit) to use
#
#       The default for Jessie is to use systemd.  Setting 'initdaemon'
#       to 'sysvinit' will cause SysV to be used instead.
#
#   raidtype    - The RAID type to build (e.g. none, 0, 1, 5, 6, 10)
#
#       If raidtype is set to 'none' (the default) then the
#       first disk will be formatted as a non-RAID, single disk.
#
#   raiddisks   - The number of active disks to include in the volume
#
#   raidspares  - The number of spare disks to include in the volume
#
#   Partman itself will throw the error If the requested number of
#   disks, spares, and raid type can not be fulfilled.
#
#   Partition Sizing (smallest disk < 40G)
#   =======================================
#   Swap        384(MB)
#   /           800(MB)
#   /boot       256(MB)
#   /home       32(MB)      [ nodev ]
#   /var        512(MB)
#   /usr        1024(MB)
#   /usr/local  256(MB)
#   /tmp        256(MB)     [ nodev, nosuid, noexec ]
#   /var/tmp    256(MB)     [ nodev, nosuid, noexec ]
#   /var/log    1024(MB)
#
#   Partition Sizing (smallest disk >= 40G)
#   =======================================
#   Swap        4096(MB)
#   /           896(MB)
#   /boot       256(MB)
#   /home       4096(MB)    [ nodev ]
#   /var        7168(MB)
#   /usr        4096(MB)
#   /usr/local  512(MB)
#   /tmp        4096(MB)    [ nodev, nosuid, noexec ]
#   /var/tmp    4096(MB)    [ nodev, nosuid, noexec ]
#   /var/log    8192(MB)
#
#   Note: Some Debian packages run executables from /tmp which breaks under
#         the above 'noexec' setting.  To combat this, the following is added
#         to /etc/apt/apt.conf.d/50remount.
#
#         DPkg::Pre-Install-Pkgs {"mount -o remount,exec /tmp";};
#         DPkg::Post-Invoke {"mount -o remount /tmp";};
#
###############################################################################

###
### Localization
###

# Preseeding only locale sets language, country and locale.
d-i debian-installer/locale string en_US

# The values can also be preseeded individually for greater flexibility.
#d-i debian-installer/language string en
#d-i debian-installer/country string NL
#d-i debian-installer/locale string en_GB.UTF-8
# Optionally specify additional locales to be generated.
#d-i localechooser/supported-locales multiselect en_US.UTF-8, nl_NL.UTF-8

# Keyboard selection.
d-i keyboard-configuration/xkb-keymap select us
# d-i keyboard-configuration/toggle select No toggling

###
### Network configuration
###

# Disable network configuration entirely. This is useful for cdrom
# installations on non-networked devices where the network questions,
# warning and long timeouts are a nuisance.
#d-i netcfg/enable boolean false

# netcfg will choose an interface that has link if possible. This makes it
# skip displaying a list if there is more than one interface.
d-i netcfg/choose_interface select auto

# To pick a particular interface instead:
#d-i netcfg/choose_interface select eth1

# To set a different link detection timeout (default is 3 seconds).
# Values are interpreted as seconds.
#d-i netcfg/link_wait_timeout string 10

# If you have a slow dhcp server and the installer times out waiting for
# it, this might be useful.
#d-i netcfg/dhcp_timeout string 60
#d-i netcfg/dhcpv6_timeout string 60

# If you prefer to configure the network manually, uncomment this line and
# the static network configuration below.
#d-i netcfg/disable_autoconfig boolean true

# If you want the preconfiguration file to work on systems both with and
# without a dhcp server, uncomment these lines and the static network
# configuration below.
#d-i netcfg/dhcp_failed note
#d-i netcfg/dhcp_options select Configure network manually

# Static network configuration.
#
# IPv4 example
#d-i netcfg/get_ipaddress string 192.168.1.42
#d-i netcfg/get_netmask string 255.255.255.0
#d-i netcfg/get_gateway string 192.168.1.1
#d-i netcfg/get_nameservers string 192.168.1.1
#d-i netcfg/confirm_static boolean true
#
# IPv6 example
#d-i netcfg/get_ipaddress string fc00::2
#d-i netcfg/get_netmask string ffff:ffff:ffff:ffff::
#d-i netcfg/get_gateway string fc00::1
#d-i netcfg/get_nameservers string fc00::1
#d-i netcfg/confirm_static boolean true

# Any hostname and domain names assigned from dhcp take precedence over
# values set here. However, setting the values still prevents the questions
# from being shown, even if values come from dhcp.
d-i netcfg/get_hostname string unassigned-hostname
d-i netcfg/get_domain string unassigned-domain

# If you want to force a hostname, regardless of what either the DHCP
# server returns or what the reverse DNS entry for the IP is, uncomment
# and adjust the following line.
#d-i netcfg/hostname string somehost

# Disable that annoying WEP key dialog.
d-i netcfg/wireless_wep string
# The wacky dhcp hostname that some ISPs use as a password of sorts.
#d-i netcfg/dhcp_hostname string radish

# If non-free firmware is needed for the network or other hardware, you can
# configure the installer to always try to load it, without prompting. Or
# change to false to disable asking.
#d-i hw-detect/load_firmware boolean true

###
### Network console
###

# Use the following settings if you wish to make use of the network-console
# component for remote installation over SSH. This only makes sense if you
# intend to perform the remainder of the installation manually.
#d-i anna/choose_modules string network-console
#d-i network-console/authorized_keys_url string http://10.0.0.1/openssh-key
#d-i network-console/password password r00tme
#d-i network-console/password-again password r00tme

###
### Mirror settings
###

# If you select ftp, the mirror/country string does not need to be set.
#d-i mirror/protocol string ftp
d-i mirror/country string manual
d-i mirror/http/hostname string http.us.debian.org
d-i mirror/http/directory string /debian
d-i mirror/http/proxy string

# Suite to install.
d-i mirror/suite string jessie

# Suite to use for loading installer components (optional).
#d-i mirror/udeb/suite string testing

###
### Account setup
###

# Skip creation of a root account (normal user account will be able to
# use sudo).
#d-i passwd/root-login boolean false
# Alternatively, to skip creation of a normal user account.
d-i passwd/make-user boolean false

# Root password, either in clear text
#d-i passwd/root-password password r00tme
#d-i passwd/root-password-again password r00tme
# or encrypted using an MD5 hash.
d-i passwd/root-password-crypted password $1$Go66mVnv$S.JtLDS.eIB6Rc1vrz/ix0

# To create a normal user account.
#d-i passwd/user-fullname string Debian User
#d-i passwd/username string debian
# Normal user's password, either in clear text
#d-i passwd/user-password password insecure
#d-i passwd/user-password-again password insecure
# or encrypted using an MD5 hash.
#d-i passwd/user-password-crypted password [MD5 hash]
# Create the first user with the specified UID instead of the default.
#d-i passwd/user-uid string 1010

# The user account will be added to some standard initial groups. To
# override that, use this.
#d-i passwd/user-default-groups string audio cdrom video

###
### Clock and time zone setup
###

# Controls whether or not the hardware clock is set to UTC.
d-i clock-setup/utc boolean true

# You may set this to any valid setting for $TZ; see the contents of
# /usr/share/zoneinfo/ for valid values.
d-i time/zone string US/Eastern

# Controls whether to use NTP to set the clock during the install
d-i clock-setup/ntp boolean true

# NTP server to use. The default is almost always fine here.
# d-i clock-setup/ntp-server string 0.debian.pool.ntp.org

###
### Partitioning
###

## Partitioning example
# If the system has free space you can choose to only partition that space.
# This is only honoured if partman-auto/method (below) is not set.
#d-i partman-auto/init_automatically_partition select biggest_free

# Alternatively, you may specify a disk to partition. If the system has only
# one disk the installer will default to using that, but otherwise the device
# name must be given in traditional, non-devfs format (so e.g. /dev/sda
# and not e.g. /dev/discs/disc0/disc).
# For example, to use the first SCSI/SATA hard disk:
#d-i partman-auto/disk string /dev/sda
# In addition, you'll need to specify the method to use.
# The presently available methods are:
# - regular: use the usual partition types for your architecture
# - lvm:     use LVM to partition the disk
# - crypto:  use LVM within an encrypted partition
d-i partman-auto/method string regular

# If one of the disks that are going to be automatically partitioned
# contains an old LVM configuration, the user will normally receive a
# warning. This can be preseeded away...
d-i partman-lvm/device_remove_lvm boolean true

# The same applies to pre-existing software RAID array:
d-i partman-md/device_remove_md boolean true
d-i partman-md/confirm_nooverwrite boolean true

# And the same goes for the confirmation to write the lvm partitions.
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true

# Name default volume group vg0
d-i partman-auto-lvm/new_vg_name string vg0

# You can choose one of the three predefined partitioning recipes:
# - atomic: all files in one partition
# - home:   separate /home partition
# - multi:  separate /home, /var, and /tmp partitions
d-i partman-auto/choose_recipe select expert_recipe

# Or provide a recipe of your own...
# If you have a way to get a recipe file into the d-i environment, you can
# just point at it.
#d-i partman-auto/expert_recipe_file string /hd-media/recipe

# If not, you can put an entire recipe into the preconfiguration file in one
# (logical) line. This example creates a small /boot partition, suitable
# swap, and uses the rest of the space for the root partition:
#d-i partman-auto/expert_recipe string                         \
#      boot-root ::                                            \
#              40 50 100 ext3                                  \
#                      $primary{ } $bootable{ }                \
#                      method{ format } format{ }              \
#                      use_filesystem{ } filesystem{ ext3 }    \
#                      mountpoint{ /boot }                     \
#              .                                               \
#              500 10000 1000000000 ext3                       \
#                      method{ format } format{ }              \
#                      use_filesystem{ } filesystem{ ext3 }    \
#                      mountpoint{ / }                         \
#              .                                               \
#              64 512 300% linux-swap                          \
#                      method{ swap } format{ }                \
#              .

# The full recipe format is documented in the file partman-auto-recipe.txt
# included in the 'debian-installer' package or available from D-I source
# repository. This also documents how to specify settings such as file
# system labels, volume group names and which physical devices to include
# in a volume group.

# This makes partman automatically partition without confirmation, provided
# that you told it what to do using one of the methods above.
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

## Partitioning using RAID
# The method should be set to "raid".
#d-i partman-auto/method string raid
# Specify the disks to be partitioned. They will all get the same layout,
# so this will only work if the disks are the same size.
#d-i partman-auto/disk string /dev/sda /dev/sdb

# Next you need to specify the physical partitions that will be used. 
#d-i partman-auto/expert_recipe string \
#      multiraid ::                                         \
#              1000 5000 4000 raid                          \
#                      $primary{ } method{ raid }           \
#              .                                            \
#              64 512 300% raid                             \
#                      method{ raid }                       \
#              .                                            \
#              500 10000 1000000000 raid                    \
#                      method{ raid }                       \
#              .

# Last you need to specify how the previously defined partitions will be
# used in the RAID setup. Remember to use the correct partition numbers
# for logical partitions. RAID levels 0, 1, 5, 6 and 10 are supported;
# devices are separated using "#".
# Parameters are:
# <raidtype> <devcount> <sparecount> <fstype> <mountpoint> \
#          <devices> <sparedevices>

#d-i partman-auto-raid/recipe string \
#    1 2 0 ext3 /                    \
#          /dev/sda1#/dev/sdb1       \
#    .                               \
#    1 2 0 swap -                    \
#          /dev/sda5#/dev/sdb5       \
#    .                               \
#    0 2 0 ext3 /home                \
#          /dev/sda6#/dev/sdb6       \
#    .

# For additional information see the file partman-auto-raid-recipe.txt
# included in the 'debian-installer' package or available from D-I source
# repository.

# This makes partman automatically partition without confirmation.
d-i partman-md/confirm boolean true
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

# Acknowledge the last partition as not being mounted
d-i partman-basicfilesystems/no_mount_point boolean false

# Acknowledge the for partitioning needed but else unused LV "dummy"
d-i partman-basicmethods/method_only boolean false

## Controlling how partitions are mounted
# The default is to mount by UUID, but you can also choose "traditional" to
# use traditional device names, or "label" to try filesystem labels before
# falling back to UUIDs.
#d-i partman/mount_style select uuid

###
### Base system installation
###

# Configure APT to not install recommended packages by default. Use of this
# option can result in an incomplete system and should only be used by very
# experienced users.
#d-i base-installer/install-recommends boolean false

# The kernel image (meta) package to be installed; "none" can be used if no
# kernel is to be installed.
#d-i base-installer/kernel/image string linux-image-586

###
### Apt setup
###

# You can choose to install non-free and contrib software.
#d-i apt-setup/non-free boolean true
#d-i apt-setup/contrib boolean true

# Uncomment this if you don't want to use a network mirror.
#d-i apt-setup/use_mirror boolean false

# Select which update services to use; define the mirrors to be used.
# Values shown below are the normal defaults.
d-i apt-setup/services-select multiselect security, updates
#d-i apt-setup/security_host string security.debian.org

# Additional repositories, local[0-9] available
#d-i apt-setup/local0/repository string \
#       http://local.server/debian stable main
#d-i apt-setup/local0/comment string local server

# Enable deb-src lines
d-i apt-setup/local0/source boolean false

# URL to the public key of the local repository; you must provide a key or
# apt will complain about the unauthenticated repository and so the
# sources.list line will be left commented out
#d-i apt-setup/local0/key string http://local.server/key

# By default the installer requires that repositories be authenticated
# using a known gpg key. This setting can be used to disable that
# authentication. Warning: Insecure, not recommended.
#d-i debian-installer/allow_unauthenticated boolean true

###
### Package selection
###

#tasksel tasksel/first multiselect standard, web-server, kde-desktop
tasksel tasksel/first multiselect

# Individual additional packages to install
d-i pkgsel/include string lsb-release openssh-client ssmtp puppet mercurial etckeeper

# Whether to upgrade packages after debootstrap.
# Allowed values: none, safe-upgrade, full-upgrade
d-i pkgsel/upgrade select full-upgrade

# Some versions of the installer can report back on what software you have
# installed, and what software you use. The default is not to report back,
# but sending reports helps the project determine what software is most
# popular and include it on CDs.
popularity-contest popularity-contest/participate boolean false

###
### Boot loader installation
###

# Grub is the default boot loader (for x86). If you want lilo installed
# instead, uncomment this:
#d-i grub-installer/skip boolean true
# To also skip installing lilo, and install no bootloader, uncomment this
# too:
d-i lilo-installer/skip boolean true

# This is fairly safe to set, it makes grub install automatically to the MBR
# if no other operating system is detected on the machine.
d-i grub-installer/only_debian boolean true

# This one makes grub-installer install to the MBR if it also finds some other
# OS, which is less safe as it might not be able to boot that other OS.
d-i grub-installer/with_other_os boolean true

# Due notably to potential USB sticks, the location of the MBR can not be
# determined safely in general, so this needs to be specified:
#d-i grub-installer/bootdev  string /dev/sda
# To install to the first device (assuming it is not a USB stick):
#d-i grub-installer/bootdev  string default

# Alternatively, if you want to install to a location other than the mbr,
# uncomment and edit these lines:
#d-i grub-installer/only_debian boolean false
#d-i grub-installer/with_other_os boolean false
#d-i grub-installer/bootdev  string (hd0,1)
# To install grub to multiple disks:
#d-i grub-installer/bootdev  string (hd0,1) (hd1,1) (hd2,1)

# Optional password for grub, either in clear text
#d-i grub-installer/password password r00tme
#d-i grub-installer/password-again password r00tme
# or encrypted using an MD5 hash, see grub-md5-crypt(8).
#d-i grub-installer/password-crypted password [MD5 hash]

# Use the following option to add additional boot parameters for the
# installed system (if supported by the bootloader installer).
# Note: options passed to the installer will be added automatically.
#d-i debian-installer/add-kernel-opts string nousb

###
### Finishing up the installation
###

# During installations from serial console, the regular virtual consoles
# (VT1-VT6) are normally disabled in /etc/inittab. Uncomment the next
# line to prevent this.
#d-i finish-install/keep-consoles boolean true

# Avoid that last message about the install being complete.
d-i finish-install/reboot_in_progress note

# This will prevent the installer from ejecting the CD during the reboot,
# which is useful in some situations.
#d-i cdrom-detect/eject boolean false

# This is how to make the installer shutdown when finished, but not
# reboot into the installed system.
#d-i debian-installer/exit/halt boolean true
# This will power off the machine instead of just halting it.
#d-i debian-installer/exit/poweroff boolean true

###
### Preseeding other packages
###

# Depending on what software you choose to install, or if things go wrong
# during the installation process, it's possible that other questions may
# be asked. You can preseed those too, of course. To get a list of every
# possible question that could be asked during an install, do an
# installation, and then run these commands:
#   debconf-get-selections --installer > file
#   debconf-get-selections >> file
snoopy snoopy/install-ld-preload string  true

###
### Advanced options
###

### Running custom commands during the installation
# d-i preseeding is inherently not secure. Nothing in the installer checks
# for attempts at buffer overflows or other exploits of the values of a
# preconfiguration file like this one. Only use preconfiguration files from
# trusted locations! To drive that home, and because it's generally useful,
# here's a way to run any shell command you'd like inside the installer,
# automatically.

# This first command is run as early as possible, just after
# preseeding is read.
#d-i preseed/early_command string anna-install some-udeb

# This command is run immediately before the partitioner starts. It may be
# useful to apply dynamic partitioner preseeding that depends on the state
# of the disks (which may not be visible when preseed/early_command runs).
d-i partman/early_command string                                        \
    DEBUG_FILE="/tmp/partman-debug";                                    \
    LVM_METHOD="raid";                                                  \
    BOOT_FS="raid";                                                     \
    BOOT_METHOD="raid";                                                 \
    BOOT_EXTRA="\$lvmignore{ }";                                        \
    LVM_EXTRA="\$lvmignore{ }";                                         \
    SWAP_SZ=4096;                                                       \
    LV01_SZ=896;                                                        \
    LV02_SZ=4096;                                                       \
    LV03_SZ=7168;                                                       \
    LV04_SZ=4096;                                                       \
    LV05_SZ=512;                                                        \
    LV06_SZ=4096;                                                       \
    LV07_SZ=4096;                                                       \
    LV08_SZ=8192;                                                       \
    SMALLEST_DISK=$(                                                    \
        ( list-devices disk | while read DISK; do                       \
            fdisk -l "${DISK}" | grep "^Disk .* bytes" | cut -f5 -d\ ;  \
          done ) | sort -un | head -n1                                  \
    );                                                                  \
    if [ ${SMALLEST_DISK} -lt 40000000000 ]; then                       \
        SWAP_SZ=384;                                                    \
        LV01_SZ=800;                                                    \
        LV02_SZ=32;                                                     \
        LV03_SZ=512;                                                    \
        LV04_SZ=1024;                                                   \
        LV05_SZ=256;                                                    \
        LV06_SZ=256;                                                    \
        LV07_SZ=256;                                                    \
        LV08_SZ=1024;                                                   \
    fi;                                                                 \
    DISKS=$(list-devices disk | wc -l);                                 \
    DISK_LIST="";                                                       \
    RAID_LIST1="";                                                      \
    RAID_LIST5="";                                                      \
    RAID_TYPE="none";                                                   \
    RAID_DISKS="${DISKS}";                                              \
    RAID_SPARES="0";                                                    \
    if [ "${raidtype}" == "none" ]; then                                \
        raiddisks=1;                                                    \
    fi;                                                                 \
    if [ "${raidtype}" != "" ]; then                                    \
        RAID_TYPE="${raidtype}";                                        \
    fi;                                                                 \
    if [ "${raiddisks}" != "" ]; then                                   \
        RAID_DISKS="${raiddisks}";                                      \
    fi;                                                                 \
    if [ "${raidspares}" != "" ]; then                                  \
        RAID_SPARES="${raidspares}";                                    \
    fi;                                                                 \
    RAID_TOTAL=$(( ${RAID_DISKS} + ${RAID_SPARES} ));                   \
    for DISK in $(list-devices disk | head -n ${RAID_DISKS} ); do       \
        if [ "${DISK_LIST}" != "" ]; then                               \
            DISK_LIST="${DISK_LIST} ";                                  \
        fi;                                                             \
        DISK_LIST="${DISK_LIST}${DISK}";                                \
        if [ "${DISK#/dev/cciss}" != "${DISK}" ]; then                  \
            DISK_P="p";                                                 \
        fi;                                                             \
        if [ "${RAID_LIST1}" != "" ]; then                              \
            RAID_LIST1="${RAID_LIST1}#";                                \
        fi;                                                             \
        RAID_LIST1="${RAID_LIST1}${DISK}${DISK_P}1";                    \
        if [ "${RAID_LIST5}" != "" ]; then                              \
            RAID_LIST5="${RAID_LIST5}#";                                \
        fi;                                                             \
        RAID_LIST5="${RAID_LIST5}${DISK}${DISK_P}5";                    \
    done;                                                               \
    for SPARE in $(list-devices disk | tail -n +$(( ${RAID_DISKS} + 1 )) | head -n ${RAID_SPARES} ); do       \
        if [ "${SPARE_LIST}" != "" ]; then                              \
            SPARE_LIST="${SPARE_LIST} ";                                \
        fi;                                                             \
        SPARE_LIST="${SPARE_LIST}${SPARE}";                             \
        if [ "${SPARE#/dev/cciss}" != "${SPARE}" ]; then                \
            SPARE_P="p";                                                \
        fi;                                                             \
        if [ "${SPARE_LIST1}" != "" ]; then                             \
            SPARE_LIST1="${SPARE_LIST1}#";                              \
        fi;                                                             \
        SPARE_LIST1="${SPARE_LIST1}${SPARE}${SPARE_P}1";                \
        if [ "${SPARE_LIST5}" != "" ]; then                             \
            SPARE_LIST5="${SPARE_LIST5}#";                              \
        fi;                                                             \
        SPARE_LIST5="${SPARE_LIST5}${SPARE}${SPARE_P}5";                \
    done;                                                               \
    BOOT_LIST="${DISK_LIST} ${SPARE_LIST}";                             \
    if [ "${RAID_DISKS}" == "1" ]; then                                 \
        LVM_METHOD="lvm";                                               \
        BOOT_FS="ext4";                                                 \
        BOOT_METHOD="format";                                           \
        BOOT_EXTRA="format{ }                                           \
                    use_filesystem{ }                                   \
                    filesystem{ ext4 }                                  \
                    mountpoint{ /boot }";                               \
        LVM_EXTRA="";                                                   \
    else                                                                \
        debconf-set partman-auto-raid/recipe "                          \
            ${RAID_TYPE} ${RAID_DISKS} ${RAID_SPARES} ext4 /boot ${RAID_LIST1} ${SPARE_LIST1}.  \
            ${RAID_TYPE} ${RAID_DISKS} ${RAID_SPARES} lvm  -     ${RAID_LIST5} ${SPARE_LIST5}.  \
            ";                                                          \
    fi;                                                                 \
    echo "DISKS:       '${DISKS}'"       >> ${DEBUG_FILE};              \
    echo "RAID_TYPE:   '${RAID_TYPE}'"   >> ${DEBUG_FILE};              \
    echo "RAID_DISKS:  '${RAID_DISKS}'"  >> ${DEBUG_FILE};              \
    echo "RAID_SPARES: '${RAID_SPARES}'" >> ${DEBUG_FILE};              \
    echo "DISK_LIST:   '${DISK_LIST}'"   >> ${DEBUG_FILE};              \
    echo "RAID_LIST1:  '${RAID_LIST1}'"  >> ${DEBUG_FILE};              \
    echo "SPARE_LIST1: '${SPARE_LIST1}'" >> ${DEBUG_FILE};              \
    echo "RAID_LIST5:  '${RAID_LIST5}'"  >> ${DEBUG_FILE};              \
    echo "SPARE_LIST5: '${SPARE_LIST5}'" >> ${DEBUG_FILE};              \
    echo "BOOT_LIST:   '${BOOT_LIST}'"   >> ${DEBUG_FILE};              \
    echo "BOOT_FS:     '${BOOT_FS}'"     >> ${DEBUG_FILE};              \
    echo "BOOT_METHOD: '${BOOT_METHOD}'" >> ${DEBUG_FILE};              \
    echo "BOOT_EXTRA:  '${BOOT_EXTRA}'"  >> ${DEBUG_FILE};              \
    echo "LVM_METHOD:  '${LVM_METHOD}'"  >> ${DEBUG_FILE};              \
    echo "LVM_EXTRA:   '${LVM_EXTRA}'"   >> ${DEBUG_FILE};              \
    echo "LV01_SZ:     '${LV01_SZ}'"     >> ${DEBUG_FILE};              \
    echo "LV02_SZ:     '${LV02_SZ}'"     >> ${DEBUG_FILE};              \
    echo "LV03_SZ:     '${LV03_SZ}'"     >> ${DEBUG_FILE};              \
    echo "LV04_SZ:     '${LV04_SZ}'"     >> ${DEBUG_FILE};              \
    echo "LV05_SZ:     '${LV05_SZ}'"     >> ${DEBUG_FILE};              \
    echo "LV06_SZ:     '${LV06_SZ}'"     >> ${DEBUG_FILE};              \
    echo "LV07_SZ:     '${LV07_SZ}'"     >> ${DEBUG_FILE};              \
    echo "LV08_SZ:     '${LV08_SZ}'"     >> ${DEBUG_FILE};              \
    debconf-set partman-auto/disk "${DISK_LIST} ${SPARE_LIST}";         \
    debconf-set grub-installer/bootdev "${BOOT_LIST}";                  \
    debconf-set grub-installer/choose_bootdev "manual";                 \
    debconf-set partman-auto/method "${LVM_METHOD}";                    \
    debconf-set partman-auto/expert_recipe "                            \
        custom-recipe ::                                                \
            256 1000000 256 ${BOOT_FS}                                  \
                \$primary{ }                                            \
                \$bootable{ }                                           \
                method{ ${BOOT_METHOD} }                                \
                ${BOOT_EXTRA}                                           \
            .                                                           \
            500 100000 100000000 ${LVM_METHOD}                          \
                ${LVM_EXTRA}                                            \
                method{ ${LVM_METHOD} }                                 \
                vg_name{ vg0 }                                          \
            .                                                           \
            ${SWAP_SZ} ${SWAP_SZ} ${SWAP_SZ} linux-swap                 \
                \$defaultignore{ }                                      \
                \$lvmok{ }                                              \
                in_vg{ vg0 }                                            \
                lv_name{ swap }                                         \
                label{ swap }                                           \
                method{ swap }                                          \
                format{ }                                               \
            .                                                           \
            ${LV01_SZ} 10000 ${LV01_SZ} ext4                            \
                \$defaultignore{ }                                      \
                \$lvmok{ }                                              \
                in_vg{ vg0 }                                            \
                lv_name{ lv01 }                                         \
                label{ lv01 }                                           \
                method{ format }                                        \
                format{ }                                               \
                use_filesystem{ }                                       \
                filesystem{ ext4 }                                      \
                mountpoint{ / }                                         \
            .                                                           \
            ${LV02_SZ} 10000 ${LV02_SZ} ext4                            \
                \$defaultignore{ }                                      \
                \$lvmok{ }                                              \
                in_vg{ vg0 }                                            \
                lv_name{ lv02 }                                         \
                label{ lv02 }                                           \
                method{ format }                                        \
                format{ }                                               \
                use_filesystem{ }                                       \
                filesystem{ ext4 }                                      \
                mountpoint{ /home }                                     \
                options/nodev{ nodev }                                  \
            .                                                           \
            ${LV03_SZ} 10000 ${LV03_SZ} ext4                            \
                \$defaultignore{ }                                      \
                \$lvmok{ }                                              \
                in_vg{ vg0 }                                            \
                lv_name{ lv03 }                                         \
                label{ lv03 }                                           \
                method{ format }                                        \
                format{ }                                               \
                use_filesystem{ }                                       \
                filesystem{ ext4 }                                      \
                mountpoint{ /var }                                      \
            .                                                           \
            ${LV04_SZ} 10000 ${LV04_SZ} ext4                            \
                \$defaultignore{ }                                      \
                \$lvmok{ }                                              \
                in_vg{ vg0 }                                            \
                lv_name{ lv04 }                                         \
                label{ lv04 }                                           \
                method{ format }                                        \
                format{ }                                               \
                use_filesystem{ }                                       \
                filesystem{ ext4 }                                      \
                mountpoint{ /usr }                                      \
            .                                                           \
            ${LV05_SZ} 10000 ${LV05_SZ} ext4                            \
                \$defaultignore{ }                                      \
                \$lvmok{ }                                              \
                in_vg{ vg0 }                                            \
                lv_name{ lv05 }                                         \
                label{ lv05 }                                           \
                method{ format }                                        \
                format{ }                                               \
                use_filesystem{ }                                       \
                filesystem{ ext4 }                                      \
                mountpoint{ /usr/local }                                \
            .                                                           \
            ${LV06_SZ} 10000 ${LV06_SZ} ext4                            \
                \$defaultignore{ }                                      \
                \$lvmok{ }                                              \
                in_vg{ vg0 }                                            \
                lv_name{ lv06 }                                         \
                label{ lv06 }                                           \
                method{ format }                                        \
                format{ }                                               \
                use_filesystem{ }                                       \
                filesystem{ ext4 }                                      \
                mountpoint{ /tmp }                                      \
                options/nodev{ nodev }                                  \
                options/nosuid{ nosuid }                                \
                options/noexec{ noexec }                                \
            .                                                           \
            ${LV07_SZ} 10000 ${LV07_SZ} ext4                            \
                \$defaultignore{ }                                      \
                \$lvmok{ }                                              \
                in_vg{ vg0 }                                            \
                lv_name{ lv07 }                                         \
                label{ lv07 }                                           \
                method{ format }                                        \
                format{ }                                               \
                use_filesystem{ }                                       \
                filesystem{ ext4 }                                      \
                mountpoint{ /var/tmp }                                  \
                options/nodev{ nodev }                                  \
                options/nosuid{ nosuid }                                \
                options/noexec{ noexec }                                \
            .                                                           \
            ${LV08_SZ} 10000 ${LV08_SZ} ext4                            \
                \$defaultignore{ }                                      \
                \$lvmok{ }                                              \
                in_vg{ vg0 }                                            \
                lv_name{ lv08 }                                         \
                label{ lv08 }                                           \
                method{ format }                                        \
                format{ }                                               \
                use_filesystem{ }                                       \
                filesystem{ ext4 }                                      \
                mountpoint{ /var/log }                                  \
            .                                                           \
            10 10 1048576 ext4                                          \
                \$defaultignore{ }                                      \
                \$lvmok{ }                                              \
                in_vg{ vg0 }                                            \
                lv_name{ dummy }                                        \
                method{ keep }                                          \
            .                                                           \
            ";

# This command is run just before the install finishes, but when there is
# still a usable /target directory. You can chroot to /target and use it
# directly, or use the apt-install and in-target commands to easily install
# packages and run commands in the target system.
#d-i preseed/late_command string apt-install zsh; in-target chsh -s /bin/zsh
d-i preseed/late_command string                                         \
    in-target lvremove -f --noudevsync vg0/dummy;                       \
    ETCKEEPER_CONF="/target/etc/etckeeper/etckeeper.conf";              \
    cp "${ETCKEEPER_CONF}" "${ETCKEEPER_CONF}.orig";                    \
    cat "${ETCKEEPER_CONF}.orig" |                                      \
        sed -e 's/^VCS/#VCS/g' -e 's/^#VCS="hg"/VCS="hg"/'              \
            > "${ETCKEEPER_CONF}";                                      \
    in-target etckeeper init;                                           \
    in-target etckeeper commit "Initial commit";                        \
    if [ "${initdaemon}" == "sysvinit" ]; then                          \
        in-target apt-get install -y sysvinit-core;                     \
        in-target etckeeper commit "Install sysvinit-core";             \
    fi;                                                                 \
    in-target apt-get clean;                                            \
    APT_REMOUNT="/target/etc/apt/apt.conf.d/50remount";                 \
    echo "DPkg::Pre-Install-Pkgs {\"mount -o remount,exec /tmp\";};"    \
        > "${APT_REMOUNT}";                                             \
    echo "DPkg::Post-Invoke {\"mount -o remount /tmp\";};"              \
        >> "${APT_REMOUNT}";                                            \
    in-target etckeeper commit "Configure apt to for noexec /tmp";      \
    FSTAB="/target/etc/fstab";                                          \
    cp "${FSTAB}" "${FSTAB}.orig";                                      \
    cat "${FSTAB}.orig" |                                               \
        sed -e 's/\( \/tmp.*nosuid\)/\1,noexec/' > "${FSTAB}";          \
    in-target etckeeper commit "Add noexec to /tmp";                    \
    PUPPET_CONF="/target/etc/puppet.conf";                              \
    cp "${PUPPET_CONF}" "${PUPPET_CONF}.orig";                          \
    echo "[main]"                                 > "${PUPPET_CONF}";   \
    echo "logdir=/var/log/puppet"                >> "${PUPPET_CONF}";   \
    echo "vardir=/var/lib/puppet"                >> "${PUPPET_CONF}";   \
    echo "manifestdir=/var/lib/puppet/manifests" >> "${PUPPET_CONF}";   \
    echo "ssldir=/var/lib/puppet/ssl"            >> "${PUPPET_CONF}";   \
    echo "rundir=/var/run/puppet"                >> "${PUPPET_CONF}";   \
    echo "factpath=\$vardir/lib/facter"          >> "${PUPPET_CONF}";   \
    echo "pluginsync=true"                       >> "${PUPPET_CONF}";   \
    echo "runinterval=315569260"                 >> "${PUPPET_CONF}";   \
    echo "server=puppet"                         >> "${PUPPET_CONF}";   \
    echo "summarize=true"                        >> "${PUPPET_CONF}";   \
    echo "show_diff = true"                      >> "${PUPPET_CONF}";   \
    echo "listen=false"                          >> "${PUPPET_CONF}";   \
    in-target etckeeper commit "Set basic puppet.conf";                 \
    in-target chage -d 0 root;                                          \
    in-target etckeeper commit "Force root to change password";
